{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\job-search-website\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Kiểm tra token trong localStorage khi khởi động\n    const token = localStorage.getItem('token');\n    if (token) {\n      authService.getCurrentUser().then(user => setUser(user)).catch(() => {\n        localStorage.removeItem('token');\n        setUser(null);\n      }).finally(() => setLoading(false));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const {\n        token,\n        user\n      } = await authService.login(email, password);\n      localStorage.setItem('token', token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const {\n        token,\n        user\n      } = await authService.register(name, email, password);\n      localStorage.setItem('token', token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n      localStorage.removeItem('token');\n      setUser(null);\n    } catch (error) {\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated: !!user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","getCurrentUser","then","catch","removeItem","finally","login","email","password","setItem","error","register","name","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Workspace/job-search-website/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Kiểm tra token trong localStorage khi khởi động\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      authService.getCurrentUser()\r\n        .then(user => setUser(user))\r\n        .catch(() => {\r\n          localStorage.removeItem('token');\r\n          setUser(null);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const { token, user } = await authService.login(email, password);\r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (name: string, email: string, password: string) => {\r\n    try {\r\n      const { token, user } = await authService.register(name, email, password);\r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isAuthenticated: !!user,\r\n        login,\r\n        register,\r\n        logout,\r\n        loading\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}