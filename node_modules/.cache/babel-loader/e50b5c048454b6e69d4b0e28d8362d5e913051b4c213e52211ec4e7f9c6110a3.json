{"ast":null,"code":"import { resolveElements } from 'motion-dom';\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n  if (borderBoxSize) {\n    const {\n      inlineSize,\n      blockSize\n    } = borderBoxSize[0];\n    return {\n      width: inlineSize,\n      height: blockSize\n    };\n  } else if (target instanceof SVGElement && \"getBBox\" in target) {\n    return target.getBBox();\n  } else {\n    return {\n      width: target.offsetWidth,\n      height: target.offsetHeight\n    };\n  }\n}\nfunction notifyTarget({\n  target,\n  contentRect,\n  borderBoxSize\n}) {\n  resizeHandlers.get(target)?.forEach(handler => {\n    handler({\n      target,\n      contentSize: contentRect,\n      get size() {\n        return getElementSize(target, borderBoxSize);\n      }\n    });\n  });\n}\nfunction notifyAll(entries) {\n  entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n  if (typeof ResizeObserver === \"undefined\") return;\n  observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n  if (!observer) createResizeObserver();\n  const elements = resolveElements(target);\n  elements.forEach(element => {\n    let elementHandlers = resizeHandlers.get(element);\n    if (!elementHandlers) {\n      elementHandlers = new Set();\n      resizeHandlers.set(element, elementHandlers);\n    }\n    elementHandlers.add(handler);\n    observer?.observe(element);\n  });\n  return () => {\n    elements.forEach(element => {\n      const elementHandlers = resizeHandlers.get(element);\n      elementHandlers?.delete(handler);\n      if (!elementHandlers?.size) {\n        observer?.unobserve(element);\n      }\n    });\n  };\n}\nexport { resizeElement };","map":{"version":3,"names":["resolveElements","resizeHandlers","WeakMap","observer","getElementSize","target","borderBoxSize","inlineSize","blockSize","width","height","SVGElement","getBBox","offsetWidth","offsetHeight","notifyTarget","contentRect","get","forEach","handler","contentSize","size","notifyAll","entries","createResizeObserver","ResizeObserver","resizeElement","elements","element","elementHandlers","Set","set","add","observe","delete","unobserve"],"sources":["D:/HK2/IE303/TopCV/node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs"],"sourcesContent":["import { resolveElements } from 'motion-dom';\r\n\r\nconst resizeHandlers = new WeakMap();\r\nlet observer;\r\nfunction getElementSize(target, borderBoxSize) {\r\n    if (borderBoxSize) {\r\n        const { inlineSize, blockSize } = borderBoxSize[0];\r\n        return { width: inlineSize, height: blockSize };\r\n    }\r\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\r\n        return target.getBBox();\r\n    }\r\n    else {\r\n        return {\r\n            width: target.offsetWidth,\r\n            height: target.offsetHeight,\r\n        };\r\n    }\r\n}\r\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\r\n    resizeHandlers.get(target)?.forEach((handler) => {\r\n        handler({\r\n            target,\r\n            contentSize: contentRect,\r\n            get size() {\r\n                return getElementSize(target, borderBoxSize);\r\n            },\r\n        });\r\n    });\r\n}\r\nfunction notifyAll(entries) {\r\n    entries.forEach(notifyTarget);\r\n}\r\nfunction createResizeObserver() {\r\n    if (typeof ResizeObserver === \"undefined\")\r\n        return;\r\n    observer = new ResizeObserver(notifyAll);\r\n}\r\nfunction resizeElement(target, handler) {\r\n    if (!observer)\r\n        createResizeObserver();\r\n    const elements = resolveElements(target);\r\n    elements.forEach((element) => {\r\n        let elementHandlers = resizeHandlers.get(element);\r\n        if (!elementHandlers) {\r\n            elementHandlers = new Set();\r\n            resizeHandlers.set(element, elementHandlers);\r\n        }\r\n        elementHandlers.add(handler);\r\n        observer?.observe(element);\r\n    });\r\n    return () => {\r\n        elements.forEach((element) => {\r\n            const elementHandlers = resizeHandlers.get(element);\r\n            elementHandlers?.delete(handler);\r\n            if (!elementHandlers?.size) {\r\n                observer?.unobserve(element);\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport { resizeElement };\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,YAAY;AAE5C,MAAMC,cAAc,GAAG,IAAIC,OAAO,CAAC,CAAC;AACpC,IAAIC,QAAQ;AACZ,SAASC,cAAcA,CAACC,MAAM,EAAEC,aAAa,EAAE;EAC3C,IAAIA,aAAa,EAAE;IACf,MAAM;MAAEC,UAAU;MAAEC;IAAU,CAAC,GAAGF,aAAa,CAAC,CAAC,CAAC;IAClD,OAAO;MAAEG,KAAK,EAAEF,UAAU;MAAEG,MAAM,EAAEF;IAAU,CAAC;EACnD,CAAC,MACI,IAAIH,MAAM,YAAYM,UAAU,IAAI,SAAS,IAAIN,MAAM,EAAE;IAC1D,OAAOA,MAAM,CAACO,OAAO,CAAC,CAAC;EAC3B,CAAC,MACI;IACD,OAAO;MACHH,KAAK,EAAEJ,MAAM,CAACQ,WAAW;MACzBH,MAAM,EAAEL,MAAM,CAACS;IACnB,CAAC;EACL;AACJ;AACA,SAASC,YAAYA,CAAC;EAAEV,MAAM;EAAEW,WAAW;EAAEV;AAAe,CAAC,EAAE;EAC3DL,cAAc,CAACgB,GAAG,CAACZ,MAAM,CAAC,EAAEa,OAAO,CAAEC,OAAO,IAAK;IAC7CA,OAAO,CAAC;MACJd,MAAM;MACNe,WAAW,EAAEJ,WAAW;MACxB,IAAIK,IAAIA,CAAA,EAAG;QACP,OAAOjB,cAAc,CAACC,MAAM,EAAEC,aAAa,CAAC;MAChD;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACA,SAASgB,SAASA,CAACC,OAAO,EAAE;EACxBA,OAAO,CAACL,OAAO,CAACH,YAAY,CAAC;AACjC;AACA,SAASS,oBAAoBA,CAAA,EAAG;EAC5B,IAAI,OAAOC,cAAc,KAAK,WAAW,EACrC;EACJtB,QAAQ,GAAG,IAAIsB,cAAc,CAACH,SAAS,CAAC;AAC5C;AACA,SAASI,aAAaA,CAACrB,MAAM,EAAEc,OAAO,EAAE;EACpC,IAAI,CAAChB,QAAQ,EACTqB,oBAAoB,CAAC,CAAC;EAC1B,MAAMG,QAAQ,GAAG3B,eAAe,CAACK,MAAM,CAAC;EACxCsB,QAAQ,CAACT,OAAO,CAAEU,OAAO,IAAK;IAC1B,IAAIC,eAAe,GAAG5B,cAAc,CAACgB,GAAG,CAACW,OAAO,CAAC;IACjD,IAAI,CAACC,eAAe,EAAE;MAClBA,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;MAC3B7B,cAAc,CAAC8B,GAAG,CAACH,OAAO,EAAEC,eAAe,CAAC;IAChD;IACAA,eAAe,CAACG,GAAG,CAACb,OAAO,CAAC;IAC5BhB,QAAQ,EAAE8B,OAAO,CAACL,OAAO,CAAC;EAC9B,CAAC,CAAC;EACF,OAAO,MAAM;IACTD,QAAQ,CAACT,OAAO,CAAEU,OAAO,IAAK;MAC1B,MAAMC,eAAe,GAAG5B,cAAc,CAACgB,GAAG,CAACW,OAAO,CAAC;MACnDC,eAAe,EAAEK,MAAM,CAACf,OAAO,CAAC;MAChC,IAAI,CAACU,eAAe,EAAER,IAAI,EAAE;QACxBlB,QAAQ,EAAEgC,SAAS,CAACP,OAAO,CAAC;MAChC;IACJ,CAAC,CAAC;EACN,CAAC;AACL;AAEA,SAASF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}