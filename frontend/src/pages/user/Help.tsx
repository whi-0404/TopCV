import React, { useState } from 'react';
import { Link } from 'react-router-dom';

const Help: React.FC = () => {
  const [activeCategory, setActiveCategory] = useState('general');
  const [searchQuery, setSearchQuery] = useState('');

  const helpCategories = [
    { id: 'general', name: 'C√¢u h·ªèi chung', icon: '‚ùì' },
    { id: 'account', name: 'T√†i kho·∫£n', icon: 'üë§' },
    { id: 'applications', name: '·ª®ng tuy·ªÉn', icon: 'üìù' },
    { id: 'profile', name: 'H·ªì s∆°', icon: 'üìã' },
    { id: 'notifications', name: 'Th√¥ng b√°o', icon: 'üîî' },
    { id: 'technical', name: 'K·ªπ thu·∫≠t', icon: '‚öôÔ∏è' }
  ];

  const faqData = {
    general: [
      {
        question: 'TopCV l√† g√¨?',
        answer: 'TopCV l√† n·ªÅn t·∫£ng tuy·ªÉn d·ª•ng h√†ng ƒë·∫ßu Vi·ªát Nam, k·∫øt n·ªëi ·ª©ng vi√™n v·ªõi c√°c nh√† tuy·ªÉn d·ª•ng uy t√≠n.'
      },
      {
        question: 'S·ª≠ d·ª•ng TopCV c√≥ m·∫•t ph√≠ kh√¥ng?',
        answer: 'Vi·ªác t·∫°o t√†i kho·∫£n v√† ·ª©ng tuy·ªÉn c√¥ng vi·ªác tr√™n TopCV ho√†n to√†n mi·ªÖn ph√≠ cho ·ª©ng vi√™n.'
      },
      {
        question: 'L√†m sao ƒë·ªÉ tƒÉng c∆° h·ªôi ƒë∆∞·ª£c tuy·ªÉn d·ª•ng?',
        answer: 'H√£y ho√†n thi·ªán h·ªì s∆°, c·∫≠p nh·∫≠t CV ƒë·ªãnh k·ª≥, ·ª©ng tuy·ªÉn nh·ªØng v·ªã tr√≠ ph√π h·ª£p v·ªõi k·ªπ nƒÉng v√† kinh nghi·ªám c·ªßa b·∫°n.'
      }
    ],
    account: [
      {
        question: 'L√†m sao ƒë·ªÉ ƒë·ªïi m·∫≠t kh·∫©u?',
        answer: 'V√†o C√†i ƒë·∫∑t > B·∫£o m·∫≠t > ƒê·ªïi m·∫≠t kh·∫©u. Nh·∫≠p m·∫≠t kh·∫©u hi·ªán t·∫°i v√† m·∫≠t kh·∫©u m·ªõi.'
      },
      {
        question: 'T√¥i qu√™n m·∫≠t kh·∫©u, ph·∫£i l√†m sao?',
        answer: 'T·∫°i trang ƒëƒÉng nh·∫≠p, nh·∫•p "Qu√™n m·∫≠t kh·∫©u", nh·∫≠p email v√† l√†m theo h∆∞·ªõng d·∫´n ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.'
      },
      {
        question: 'L√†m sao ƒë·ªÉ x√≥a t√†i kho·∫£n?',
        answer: 'Li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ qua email support@topcv.vn ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ x√≥a t√†i kho·∫£n.'
      }
    ],
    applications: [
      {
        question: 'L√†m sao ƒë·ªÉ ·ª©ng tuy·ªÉn vi·ªác l√†m?',
        answer: 'T√¨m c√¥ng vi·ªác ph√π h·ª£p, nh·∫•p "·ª®ng tuy·ªÉn ngay", ch·ªçn CV v√† vi·∫øt th∆∞ xin vi·ªác n·∫øu c·∫ßn.'
      },
      {
        question: 'T√¥i c√≥ th·ªÉ ·ª©ng tuy·ªÉn bao nhi·ªÅu c√¥ng vi·ªác?',
        answer: 'Kh√¥ng c√≥ gi·ªõi h·∫°n s·ªë l∆∞·ª£ng c√¥ng vi·ªác b·∫°n c√≥ th·ªÉ ·ª©ng tuy·ªÉn. H√£y ·ª©ng tuy·ªÉn nh·ªØng v·ªã tr√≠ ph√π h·ª£p nh·∫•t.'
      },
      {
        question: 'L√†m sao ƒë·ªÉ xem tr·∫°ng th√°i ƒë∆°n ·ª©ng tuy·ªÉn?',
        answer: 'V√†o m·ª•c "C√¥ng vi·ªác ƒë√£ ·ª©ng tuy·ªÉn" trong dashboard ƒë·ªÉ xem t·∫•t c·∫£ ƒë∆°n ·ª©ng tuy·ªÉn v√† tr·∫°ng th√°i c·ªßa ch√∫ng.'
      }
    ],
    profile: [
      {
        question: 'L√†m sao ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin c√° nh√¢n?',
        answer: 'V√†o trang H·ªì s∆°, nh·∫•p "Ch·ªânh s·ª≠a" v√† c·∫≠p nh·∫≠t th√¥ng tin c·∫ßn thi·∫øt.'
      },
      {
        question: 'T√¥i c√≥ th·ªÉ upload nhi·ªÅu CV kh√¥ng?',
        answer: 'C√≥, b·∫°n c√≥ th·ªÉ t·∫°o v√† l∆∞u nhi·ªÅu phi√™n b·∫£n CV kh√°c nhau cho c√°c v·ªã tr√≠ kh√°c nhau.'
      },
      {
        question: 'Th√¥ng tin c√° nh√¢n c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t kh√¥ng?',
        answer: 'TopCV cam k·∫øt b·∫£o m·∫≠t th√¥ng tin c√° nh√¢n c·ªßa b·∫°n theo ch√≠nh s√°ch b·∫£o m·∫≠t nghi√™m ng·∫∑t.'
      }
    ],
    notifications: [
      {
        question: 'L√†m sao ƒë·ªÉ t·∫Øt th√¥ng b√°o email?',
        answer: 'V√†o C√†i ƒë·∫∑t > Th√¥ng b√°o ƒë·ªÉ t√πy ch·ªânh c√°c lo·∫°i th√¥ng b√°o b·∫°n mu·ªën nh·∫≠n.'
      },
      {
        question: 'T√¥i kh√¥ng nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o vi·ªác l√†m ph√π h·ª£p?',
        answer: 'Ki·ªÉm tra c√†i ƒë·∫∑t th√¥ng b√°o v√† ƒë·∫£m b·∫£o b·∫°n ƒë√£ c·∫≠p nh·∫≠t ƒë·∫ßy ƒë·ªß k·ªπ nƒÉng, kinh nghi·ªám trong h·ªì s∆°.'
      }
    ],
    technical: [
      {
        question: 'Website load ch·∫≠m, t√¥i ph·∫£i l√†m sao?',
        answer: 'Th·ª≠ l√†m m·ªõi trang, x√≥a cache tr√¨nh duy·ªát ho·∫∑c th·ª≠ tr√¨nh duy·ªát kh√°c. N·∫øu v·∫´n ch·∫≠m, li√™n h·ªá h·ªó tr·ª£.'
      },
      {
        question: 'T√¥i kh√¥ng upload ƒë∆∞·ª£c CV?',
        answer: 'ƒê·∫£m b·∫£o file CV c√≥ ƒë·ªãnh d·∫°ng PDF, DOC ho·∫∑c DOCX v√† kh√¥ng qu√° 5MB. Th·ª≠ tr√¨nh duy·ªát kh√°c n·∫øu c·∫ßn.'
      }
    ]
  };

  const filteredFAQs = faqData[activeCategory as keyof typeof faqData].filter(
    faq => 
      faq.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
      faq.answer.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return (
    <div>
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-2">Trung t√¢m tr·ª£ gi√∫p</h1>
        <p className="text-gray-600">T√¨m c√¢u tr·∫£ l·ªùi cho c√°c c√¢u h·ªèi th∆∞·ªùng g·∫∑p</p>
      </div>

      {/* Search Bar */}
      <div className="mb-6">
        <div className="relative">
          <input
            type="text"
            placeholder="T√¨m ki·∫øm c√¢u h·ªèi..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="w-full px-4 py-3 pr-10 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500"
          />
          <svg 
            className="absolute right-3 top-3.5 h-5 w-5 text-gray-400" 
            fill="none" 
            stroke="currentColor" 
            viewBox="0 0 24 24"
          >
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
        {/* Category Sidebar */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow-sm p-4">
            <h3 className="font-medium text-gray-900 mb-4">Danh m·ª•c</h3>
            <div className="space-y-2">
              {helpCategories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setActiveCategory(category.id)}
                  className={`w-full text-left px-3 py-2 rounded-md text-sm transition-colors ${
                    activeCategory === category.id
                      ? 'bg-blue-100 text-blue-700 font-medium'
                      : 'text-gray-600 hover:bg-gray-50'
                  }`}
                >
                  <span className="mr-2">{category.icon}</span>
                  {category.name}
                </button>
              ))}
            </div>
          </div>
        </div>

        {/* FAQ Content */}
        <div className="lg:col-span-3">
          <div className="bg-white rounded-lg shadow-sm">
            {filteredFAQs.length === 0 ? (
              <div className="p-8 text-center">
                <svg className="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <h3 className="mt-2 text-sm font-medium text-gray-900">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</h3>
                <p className="mt-1 text-sm text-gray-500">Th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c.</p>
              </div>
            ) : (
              <div className="divide-y divide-gray-200">
                {filteredFAQs.map((faq, index) => (
                  <details key={index} className="group">
                    <summary className="flex items-center justify-between p-6 cursor-pointer hover:bg-gray-50">
                      <h3 className="text-lg font-medium text-gray-900 group-open:text-blue-600">
                        {faq.question}
                      </h3>
                      <svg 
                        className="w-5 h-5 text-gray-500 transform transition-transform group-open:rotate-180" 
                        fill="none" 
                        stroke="currentColor" 
                        viewBox="0 0 24 24"
                      >
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                      </svg>
                    </summary>
                    <div className="px-6 pb-6">
                      <p className="text-gray-600 leading-relaxed">{faq.answer}</p>
                    </div>
                  </details>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Contact Support */}
      <div className="mt-8 bg-white rounded-lg shadow-sm p-6">
        <div className="flex items-start space-x-4">
          <div className="flex-shrink-0">
            <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
              <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
          </div>
          <div className="flex-1">
            <h3 className="text-lg font-medium text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y c√¢u tr·∫£ l·ªùi?</h3>
            <p className="text-gray-600 mb-4">
              N·∫øu b·∫°n kh√¥ng t√¨m th·∫•y c√¢u tr·∫£ l·ªùi cho v·∫•n ƒë·ªÅ c·ªßa m√¨nh, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i.
            </p>
            <div className="flex flex-col sm:flex-row gap-3">
              <a
                href="mailto:support@topcv.vn"
                className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
              >
                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                G·ª≠i email h·ªó tr·ª£
              </a>
              <a
                href="tel:1900123456"
                className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              >
                <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                </svg>
                G·ªçi hotline
              </a>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Links */}
      <div className="mt-6 grid grid-cols-1 md:grid-cols-3 gap-4">
        <Link
          to="/user/profile"
          className="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow"
        >
          <div className="w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-3">
            <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
          </div>
          <div>
            <h4 className="font-medium text-gray-900">C·∫≠p nh·∫≠t h·ªì s∆°</h4>
            <p className="text-sm text-gray-500">Ho√†n thi·ªán th√¥ng tin c√° nh√¢n</p>
          </div>
        </Link>

        <Link
          to="/user/settings"
          className="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow"
        >
          <div className="w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center mr-3">
            <svg className="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
          </div>
          <div>
            <h4 className="font-medium text-gray-900">C√†i ƒë·∫∑t t√†i kho·∫£n</h4>
            <p className="text-sm text-gray-500">Qu·∫£n l√Ω th√¥ng tin t√†i kho·∫£n</p>
          </div>
        </Link>

        <Link
          to="/jobs"
          className="flex items-center p-4 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow"
        >
          <div className="w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-3">
            <svg className="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
          </div>
          <div>
            <h4 className="font-medium text-gray-900">T√¨m vi·ªác l√†m</h4>
            <p className="text-sm text-gray-500">Kh√°m ph√° c∆° h·ªôi ngh·ªÅ nghi·ªáp</p>
          </div>
        </Link>
      </div>
    </div>
  );
};

export default Help; 